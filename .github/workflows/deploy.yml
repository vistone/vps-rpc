name: Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: Build
        run: |
          go mod download
          GOOS=linux GOARCH=amd64 go build -o build/vps-rpc .

      - name: Deploy via SSH
        if: ${{ secrets.DEPLOY_HOST && secrets.DEPLOY_USER && secrets.DEPLOY_KEY }}
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail
            APP_DIR=${{ secrets.DEPLOY_APP_DIR || '/opt/vps-rpc' }}
            SERVICE=${{ secrets.DEPLOY_SERVICE || 'vps-rpc' }}
            sudo mkdir -p "$APP_DIR"
            sudo chown -R $USER "$APP_DIR"
      - name: Upload artifacts
        if: ${{ secrets.DEPLOY_HOST && secrets.DEPLOY_USER && secrets.DEPLOY_KEY }}
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT || 22 }}
          source: "build/vps-rpc,config.toml"
          target: ${{ secrets.DEPLOY_APP_DIR || '/opt/vps-rpc' }}

      - name: Restart service
        if: ${{ secrets.DEPLOY_HOST && secrets.DEPLOY_USER && secrets.DEPLOY_KEY }}
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail
            APP_DIR=${{ secrets.DEPLOY_APP_DIR || '/opt/vps-rpc' }}
            SERVICE=${{ secrets.DEPLOY_SERVICE || 'vps-rpc' }}
            UNIT_FILE=/etc/systemd/system/${SERVICE}.service
            if [ ! -f "$UNIT_FILE" ]; then
              sudo bash -c "cat > $UNIT_FILE" <<EOF
[Unit]
Description=VPS-RPC Service
After=network.target

[Service]
WorkingDirectory=${APP_DIR}
ExecStart=${APP_DIR}/vps-rpc
Restart=always
RestartSec=3
User=nobody
Group=nogroup

[Install]
WantedBy=multi-user.target
EOF
              sudo systemctl daemon-reload
              sudo systemctl enable ${SERVICE}
            fi
            sudo systemctl restart ${SERVICE}

